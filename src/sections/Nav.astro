<script type="module">
  document.addEventListener("DOMContentLoaded", () => {
    const burgerButton = document.querySelector("#burger-menu");
    const mobileMenu = document.querySelector("#mobile-menu");
    const burgerIcon = document.querySelector("#burger-icon");
    
    // Menu burger
    if (burgerButton && mobileMenu && burgerIcon) {
      burgerButton.addEventListener("click", () => {
        mobileMenu.classList.toggle("hidden");
        burgerIcon.classList.toggle("open");
      });
    }

   
    async function loadLang(lang) {
      const response = await fetch(`/i18n/${lang}.json`);
      return await response.json();
    }

   
    function applyTranslations(data) {
      const elements = document.querySelectorAll("[data-i18n]");
      elements.forEach(el => {
        const key = el.getAttribute("data-i18n");
        const value = key.split('.').reduce((o, i) => o[i], data);
        if (value) {
          if (key === "nav.downloadCV") {
            el.innerHTML = `
              <span>${value}</span>
              <svg xmlns="http://www.w3.org/2000/svg" 
                fill="none" viewBox="0 0 24 24" stroke="currentColor" 
                class="w-5 h-5 opacity-60 group-hover:opacity-100 transition-transform duration-300 ease-in-out transform group-hover:translate-y-[-1px]">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                d="M4 16v2a2 2 0 002 2h12a2 2 0 002-2v-2M7 10l5 5 5-5M12 4v12" />
              </svg>
            `;
          } else {
            el.innerHTML = value;
          }
        }
      });
    }

   
    function updateCVLink(lang) {
      const cvLink = document.querySelector("#cv-link");
      let cvFile = 'Curriculum_CV_ES.pdf'; 

      if (lang === 'en') {
        cvFile = 'Curriculum_CV_EN.pdf';
      } else if (lang === 'ru') {
        cvFile = 'Curriculum_CV_EN.pdf';
      }

      cvLink.setAttribute('href', cvFile);
      cvLink.setAttribute('download', `CV_Alejandro.pdf`);
    }

   
    const selector = document.getElementById("lang-selector");
    const savedLang = localStorage.getItem("lang") || "es";
    selector.value = savedLang;

    loadLang(savedLang).then(applyTranslations);
    updateCVLink(savedLang);

    selector.addEventListener("change", async (e) => {
      const lang = e.target.value;
      localStorage.setItem("lang", lang);
      const data = await loadLang(lang);
      applyTranslations(data);
      updateCVLink(lang); // actualizar el enlace de descarga
    });
  });
</script>

<div class="flex items-center justify-between">
  <button id="burger-menu" class="block md:hidden focus:outline-none">
    <svg id="burger-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="w-8 h-8 transition-all duration-300" stroke="currentColor">
      <path id="top-bar" d="M4 6h16" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      <path id="middle-bar" d="M4 12h16" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      <path id="bottom-bar" d="M4 18h16" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
  </button>

  <nav id="mobile-menu" class="bg-white mt-[1%] 2xl:pl-6 2xl:pr-6 mt-4 pl-6 mx-auto md:flex md:justify-between hidden absolute top-14 left-0 w-full md:flex md:justify-between md:bg-transparent md:static md:flex md:gap-4 transition-all duration-500 ease-in-out md:pl-0">
    <ul class="font-semibold md:flex md:items-center md:gap-[2rem] xl:text-[1.2rem] 2xl:text-[1.4rem]">
      <select id="lang-selector" class="bg-transparent ml-4 border border-black-300 rounded px-1 py-1 focus:outline-none w-14">
        <option value="es">ðŸ‡ªðŸ‡¸</option>
        <option value="en">ðŸ‡¬ðŸ‡§</option>
        <option value="ru">ðŸ‡·ðŸ‡º</option>
      </select>

      <a href="#about-me" class="block px-5 py-3 md:inline md:p-0" data-i18n="nav.aboutMe">About Me</a>
      <a href="#skills" class="block px-5 py-3 md:inline md:p-0" data-i18n="nav.skills">Skills</a>
      <a href="#contact-me" class="block px-5 py-3 md:inline md:p-0" data-i18n="nav.contactMe">Contact Me</a>
    </ul>

    <section class="hidden md:block text-[1.3rem] 2xl:text-[1.5rem] group relative">
      <a id="cv-link" href="Curriculum_CV_ES.pdf" download="CV_Alejandro.pdf" 
         class="bg-black/90 text-white px-4 py-2 rounded flex items-center gap-2 transition-all duration-300"
         data-i18n="nav.downloadCV">
         Descargar CV
         <svg xmlns="http://www.w3.org/2000/svg" 
              fill="none" viewBox="0 0 24 24" stroke="currentColor" 
              class="w-5 h-5 opacity-0 group-hover:opacity-100 translate-x-[-10px] group-hover:translate-x-0 transition-all duration-300">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                  d="M4 16v2a2 2 0 002 2h12a2 2 0 002-2v-2M7 10l5 5 5-5M12 4v12" />
         </svg>
      </a>
    </section>
  </nav>
</div>

<style>
 #burger-icon path {
      transition: transform 0.5s ease, opacity 0.3s ease;
      
    }
  
    #top-bar {
      transform-origin: top left;
    }
    
    #middle-bar {
      opacity: 1;
    }
  
    #bottom-bar {
      transform-origin: bottom left;
    }
  
   
    #burger-icon.open #top-bar {
      transform: translateY(-4px) translateX(8px) rotate(45deg);
    }
  
    #burger-icon.open #middle-bar {
      opacity: 0;
    }
  
    #burger-icon.open #bottom-bar {
      transform: translateY(-2px) translateX(8px) rotate(-45deg);
    }
</style>